TODO:
- keep track of whether the user is signed in --> userscontroller
NO:create an instance of users controller when the user signs in/registers --> pass the object pointer back to mainwindow, and keep an instance of UsersController* in the main window
YES: pass an instance of userscontroller with signin = false to signin controller or signup controller because we only want to maintain one usercontroller for the program

- before the program exits: destroy all --> make an exit button in mainwindow

- cd and ls: how to display files in Qt GUI?
https://www.google.com/search?client=ubuntu&channel=fs&q=qt+cpp+display+files&ie=utf-8&oe=utf-8#channel=fs&q=qt+cpp+%22display+files%22
QFilesystemModel:
http://stackoverflow.com/questions/18528516/qfilesystemmodel-to-display-files-only
this is nice: 
http://www.bogotobogo.com/Qt/Qt5_QTreeView_QFileSystemModel_ModelView_MVC.php


- ClientCommand: server push when there's a new message or friend request


DONE:
- implement the observer pattern for mainwindow_notification
http://www.codeproject.com/Articles/328365/Understanding-and-Implementing-Observer-Pattern
- we want: when the message changes (in mainwindow, signup dialog, signin dialog, etc), we want to update the message in errorpopup, and popup the error popup (NO LONGER USE MAINWINDOW_NOTIFICATION)
- in MessageSubject: the objects in the list should be type ErrorPopup because we're updating errorpopup
- attach errorpopup in mainwindow, signup dialog, signin dialog, or wherever (right after errorpopup is newed)
